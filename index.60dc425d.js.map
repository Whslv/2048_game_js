{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$71511d61b312f219(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$71511d61b312f219(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$71511d61b312f219)(arr) || (0, $8ca2848f896a6803$export$71511d61b312f219)(arr, i) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr, i) || (0, $a0bc1859061deae1$export$71511d61b312f219)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game(initialState) {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.size = 4;\n        this.score = 0;\n        this.status = \"idle\";\n        this.board = initialState || this.createEmptyBoard();\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"createEmptyBoard\",\n            value: function createEmptyBoard() {\n                var _this = this;\n                return Array.from({\n                    length: this.size\n                }, function() {\n                    return Array(_this.size).fill(0);\n                });\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                this.board = this.createEmptyBoard();\n                this.score = 0;\n                this.status = \"playing\";\n                this.addRandomTile();\n                this.addRandomTile();\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                this.start();\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var empty = [];\n                for(var r = 0; r < this.size; r++){\n                    for(var c = 0; c < this.size; c++)if (this.board[r][c] === 0) empty.push([\n                        r,\n                        c\n                    ]);\n                }\n                if (empty.length === 0) return;\n                var _empty_Math_floor = (0, $efec029548ccee7f$export$71511d61b312f219)(empty[Math.floor(Math.random() * empty.length)], 2), row = _empty_Math_floor[0], col = _empty_Math_floor[1];\n                this.board[row][col] = Math.random() < 0.9 ? 2 : 4;\n                this.lastSpawned = {\n                    row: row,\n                    col: col\n                };\n            }\n        },\n        {\n            key: \"compress\",\n            value: function compress(row) {\n                var filtered = row.filter(function(v) {\n                    return v !== 0;\n                });\n                while(filtered.length < this.size)filtered.push(0);\n                return filtered;\n            }\n        },\n        {\n            key: \"merge\",\n            value: function merge(row, coordMapper) {\n                for(var i = 0; i < this.size - 1; i++)if (row[i] !== 0 && row[i] === row[i + 1]) {\n                    row[i] *= 2;\n                    if (row[i] > this.score) this.score = row[i];\n                    row[i + 1] = 0;\n                    if (!this.mergedPositions) this.mergedPositions = [];\n                    this.mergedPositions.push(coordMapper(i));\n                }\n                return row;\n            }\n        },\n        {\n            key: \"operate\",\n            value: function operate(row, coordMapper) {\n                var r = this.compress(row);\n                r = this.merge(r, coordMapper);\n                r = this.compress(r);\n                return r;\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this, _loop = function(r) {\n                    var newRow = _this.operate(_this.board[r], function(i) {\n                        return {\n                            row: r,\n                            col: i\n                        };\n                    });\n                    if (newRow.toString() !== _this.board[r].toString()) changed = true;\n                    _this.board[r] = newRow;\n                };\n                var changed = false;\n                for(var r = 0; r < this.size; r++)_loop(r);\n                if (changed) this.addRandomTile();\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this, _loop = function(r) {\n                    var reversed = (0, $227c6742e0ff6f82$export$71511d61b312f219)(_this.board[r]).reverse();\n                    var newRow = _this.operate(reversed, function(i) {\n                        return {\n                            row: r,\n                            col: _this1.size - 1 - i\n                        };\n                    }).reverse();\n                    if (newRow.toString() !== _this.board[r].toString()) changed = true;\n                    _this.board[r] = newRow;\n                };\n                var _this1 = this;\n                var changed = false;\n                for(var r = 0; r < this.size; r++)_loop(r);\n                if (changed) this.addRandomTile();\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this, _loop = function(c) {\n                    var col = _this.board.map(function(row) {\n                        return row[c];\n                    });\n                    var newCol = _this.operate(col, function(i) {\n                        return {\n                            row: i,\n                            col: c\n                        };\n                    });\n                    for(var r = 0; r < _this.size; r++){\n                        if (_this.board[r][c] !== newCol[r]) changed = true;\n                        _this.board[r][c] = newCol[r];\n                    }\n                };\n                var changed = false;\n                for(var c = 0; c < this.size; c++)_loop(c);\n                if (changed) this.addRandomTile();\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this, _loop = function(c) {\n                    var col = _this.board.map(function(row) {\n                        return row[c];\n                    }).reverse();\n                    var newCol = _this.operate(col, function(i) {\n                        return {\n                            row: _this1.size - 1 - i,\n                            col: c\n                        };\n                    }).reverse();\n                    for(var r = 0; r < _this.size; r++){\n                        if (_this.board[r][c] !== newCol[r]) changed = true;\n                        _this.board[r][c] = newCol[r];\n                    }\n                };\n                var _this1 = this;\n                var changed = false;\n                for(var c = 0; c < this.size; c++)_loop(c);\n                if (changed) this.addRandomTile();\n            }\n        },\n        {\n            key: \"isMovePossible\",\n            value: function isMovePossible() {\n                for(var r = 0; r < this.size; r++)for(var c = 0; c < this.size; c++){\n                    if (this.board[r][c] === 0) return true;\n                    if (c < this.size - 1 && this.board[r][c] === this.board[r][c + 1]) return true;\n                    if (r < this.size - 1 && this.board[r][c] === this.board[r + 1][c]) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"isWin\",\n            value: function isWin() {\n                if (this.score === 2048) this.status = \"win\";\n            }\n        }\n    ]);\n    return Game;\n}();\nvar $3d28d7f1aac198f5$export$2e2bcd8739ae039 = $3d28d7f1aac198f5$var$Game;\n\n\n\"use strict\";\nvar $197cd56b15c33885$var$game = new (0, $3d28d7f1aac198f5$export$2e2bcd8739ae039)();\nvar $197cd56b15c33885$var$startBtn = document.querySelector(\".button.start\");\nvar $197cd56b15c33885$var$scoreEl = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$cells = document.querySelectorAll(\".field-cell\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message.message-start\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message.message-lose\");\nvar $197cd56b15c33885$var$messageWinner = document.querySelector(\".message.message-win\");\nfunction $197cd56b15c33885$var$render() {\n    var state = $197cd56b15c33885$var$game.getState();\n    $197cd56b15c33885$var$scoreEl.textContent = $197cd56b15c33885$var$game.getScore();\n    $197cd56b15c33885$var$cells.forEach(function(cell, index) {\n        var row = Math.floor(index / 4);\n        var col = index % 4;\n        var value = state[row][col];\n        cell.textContent = value === 0 ? \"\" : value;\n        cell.className = \"field-cell\";\n        if (value > 0) {\n            var _game_mergedPositions;\n            cell.className = \"field-cell field-cell--\".concat(value);\n            if ((_game_mergedPositions = $197cd56b15c33885$var$game.mergedPositions) === null || _game_mergedPositions === void 0 ? void 0 : _game_mergedPositions.some(function(p) {\n                return p.row === row && p.col === col;\n            })) {\n                cell.classList.add(\"merge\");\n                setTimeout(function() {\n                    return cell.classList.remove(\"merge\");\n                }, 300);\n            }\n            if ($197cd56b15c33885$var$game.lastSpawned && $197cd56b15c33885$var$game.lastSpawned.row === row && $197cd56b15c33885$var$game.lastSpawned.col === col) {\n                cell.classList.add(\"spawn\");\n                setTimeout(function() {\n                    return cell.classList.remove(\"spawn\");\n                }, 300);\n            }\n        }\n    });\n    $197cd56b15c33885$var$game.mergedPositions = [];\n    $197cd56b15c33885$var$game.lastSpawned = null;\n}\n$197cd56b15c33885$var$startBtn.addEventListener(\"click\", function() {\n    $197cd56b15c33885$var$game.start();\n    $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageWinner.classList.add(\"hidden\");\n    $197cd56b15c33885$var$startBtn.textContent = \"Reset\";\n    $197cd56b15c33885$var$startBtn.className = \"button restart\";\n    $197cd56b15c33885$var$render();\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") return;\n    var beforeMove = JSON.stringify($197cd56b15c33885$var$game.getState());\n    if (e.key === \"ArrowLeft\") $197cd56b15c33885$var$game.moveLeft();\n    if (e.key === \"ArrowRight\") $197cd56b15c33885$var$game.moveRight();\n    if (e.key === \"ArrowUp\") $197cd56b15c33885$var$game.moveUp();\n    if (e.key === \"ArrowDown\") $197cd56b15c33885$var$game.moveDown();\n    var afterMove = JSON.stringify($197cd56b15c33885$var$game.getState());\n    if (beforeMove !== afterMove) {\n        $197cd56b15c33885$var$render();\n        if (!$197cd56b15c33885$var$game.isMovePossible()) {\n            $197cd56b15c33885$var$game.status = \"lose\";\n            $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n        }\n    }\n    if ($197cd56b15c33885$var$game.score === 2048) {\n        $197cd56b15c33885$var$game.status = \"win\";\n        $197cd56b15c33885$var$messageWinner.classList.remove(\"hidden\");\n    }\n});\n\n})();\n//# sourceMappingURL=index.60dc425d.js.map\n","'use strict';\n\n\nimport Game from '../modules/Game.class';\n\nconst game = new Game();\n\nconst startBtn = document.querySelector('.button.start');\nconst scoreEl = document.querySelector('.game-score');\nconst cells = document.querySelectorAll('.field-cell');\nconst messageStart = document.querySelector('.message.message-start');\nconst messageLose = document.querySelector('.message.message-lose');\nconst messageWinner = document.querySelector('.message.message-win');\n\nfunction render() {\n  const state = game.getState();\n\n  scoreEl.textContent = game.getScore();\n\n  cells.forEach((cell, index) => {\n    const row = Math.floor(index / 4);\n    const col = index % 4;\n    const value = state[row][col];\n\n    cell.textContent = value === 0 ? '' : value;\n    cell.className = 'field-cell';\n\n    if (value > 0) {\n      cell.className = `field-cell field-cell--${value}`;\n\n      if (game.mergedPositions?.some((p) => p.row === row && p.col === col)) {\n        cell.classList.add('merge');\n        setTimeout(() => cell.classList.remove('merge'), 300);\n      }\n\n      if (\n        game.lastSpawned &&\n        game.lastSpawned.row === row &&\n        game.lastSpawned.col === col\n      ) {\n        cell.classList.add('spawn');\n        setTimeout(() => cell.classList.remove('spawn'), 300);\n      }\n    }\n  });\n  game.mergedPositions = [];\n  game.lastSpawned = null;\n}\n\nstartBtn.addEventListener('click', () => {\n  game.start();\n  messageStart.classList.add('hidden');\n  messageLose.classList.add('hidden');\n  messageWinner.classList.add('hidden');\n  startBtn.textContent = 'Reset';\n  startBtn.className = 'button restart';\n  render();\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  const beforeMove = JSON.stringify(game.getState());\n\n  if (e.key === 'ArrowLeft') {\n    game.moveLeft();\n  }\n\n  if (e.key === 'ArrowRight') {\n    game.moveRight();\n  }\n\n  if (e.key === 'ArrowUp') {\n    game.moveUp();\n  }\n\n  if (e.key === 'ArrowDown') {\n    game.moveDown();\n  }\n\n  const afterMove = JSON.stringify(game.getState());\n\n  if (beforeMove !== afterMove) {\n    render();\n\n    if (!game.isMovePossible()) {\n      game.status = 'lose';\n      messageLose.classList.remove('hidden');\n    }\n  }\n\n  if (game.score === 2048) {\n    game.status = 'win';\n    messageWinner.classList.remove('hidden');\n  }\n});\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(initialState) {\n    this.size = 4;\n    this.score = 0;\n    this.status = 'idle';\n    this.board = initialState || this.createEmptyBoard();\n  }\n\n  createEmptyBoard() {\n    return Array.from({ length: this.size }, () => Array(this.size).fill(0));\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.board;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    return this.status;\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.board = this.createEmptyBoard();\n    this.score = 0;\n    this.status = 'playing';\n    this.addRandomTile();\n    this.addRandomTile();\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.start();\n  }\n\n  addRandomTile() {\n    const empty = [];\n\n    for (let r = 0; r < this.size; r++) {\n      for (let c = 0; c < this.size; c++) {\n        if (this.board[r][c] === 0) {\n          empty.push([r, c]);\n        }\n      }\n    }\n\n    if (empty.length === 0) {\n      return;\n    }\n\n    const [row, col] = empty[Math.floor(Math.random() * empty.length)];\n\n    this.board[row][col] = Math.random() < 0.9 ? 2 : 4;\n\n    this.lastSpawned = { row, col };\n  }\n  compress(row) {\n    const filtered = row.filter((v) => v !== 0);\n\n    while (filtered.length < this.size) {\n      filtered.push(0);\n    }\n\n    return filtered;\n  }\n  merge(row, coordMapper) {\n    for (let i = 0; i < this.size - 1; i++) {\n      if (row[i] !== 0 && row[i] === row[i + 1]) {\n        row[i] *= 2;\n\n        if (row[i] > this.score) {\n          this.score = row[i];\n        }\n        row[i + 1] = 0;\n\n        if (!this.mergedPositions) {\n          this.mergedPositions = [];\n        }\n        this.mergedPositions.push(coordMapper(i));\n      }\n    }\n\n    return row;\n  }\n  operate(row, coordMapper) {\n    let r = this.compress(row);\n\n    r = this.merge(r, coordMapper);\n    r = this.compress(r);\n\n    return r;\n  }\n\n  moveLeft() {\n    let changed = false;\n\n    for (let r = 0; r < this.size; r++) {\n      const newRow = this.operate(this.board[r], (i) => ({ row: r, col: i }));\n\n      if (newRow.toString() !== this.board[r].toString()) {\n        changed = true;\n      }\n      this.board[r] = newRow;\n    }\n\n    if (changed) {\n      this.addRandomTile();\n    }\n  }\n  moveRight() {\n    let changed = false;\n\n    for (let r = 0; r < this.size; r++) {\n      const reversed = [...this.board[r]].reverse();\n      const newRow = this.operate(reversed, (i) => ({\n        row: r,\n        col: this.size - 1 - i,\n      })).reverse();\n\n      if (newRow.toString() !== this.board[r].toString()) {\n        changed = true;\n      }\n      this.board[r] = newRow;\n    }\n\n    if (changed) {\n      this.addRandomTile();\n    }\n  }\n  moveUp() {\n    let changed = false;\n\n    for (let c = 0; c < this.size; c++) {\n      const col = this.board.map((row) => row[c]);\n      const newCol = this.operate(col, (i) => ({ row: i, col: c }));\n\n      for (let r = 0; r < this.size; r++) {\n        if (this.board[r][c] !== newCol[r]) {\n          changed = true;\n        }\n        this.board[r][c] = newCol[r];\n      }\n    }\n\n    if (changed) {\n      this.addRandomTile();\n    }\n  }\n  moveDown() {\n    let changed = false;\n\n    for (let c = 0; c < this.size; c++) {\n      const col = this.board.map((row) => row[c]).reverse();\n      const newCol = this.operate(col, (i) => ({\n        row: this.size - 1 - i,\n        col: c,\n      })).reverse();\n\n      for (let r = 0; r < this.size; r++) {\n        if (this.board[r][c] !== newCol[r]) {\n          changed = true;\n        }\n        this.board[r][c] = newCol[r];\n      }\n    }\n\n    if (changed) {\n      this.addRandomTile();\n    }\n  }\n\n  isMovePossible() {\n    for (let r = 0; r < this.size; r++) {\n      for (let c = 0; c < this.size; c++) {\n        if (this.board[r][c] === 0) {\n          return true;\n        }\n\n        if (c < this.size - 1 && this.board[r][c] === this.board[r][c + 1]) {\n          return true;\n        }\n\n        if (r < this.size - 1 && this.board[r][c] === this.board[r + 1][c]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  isWin() {\n    if (this.score === 2048) {\n      this.status = 'win';\n    }\n  }\n}\n\nexport default Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$71511d61b312f219","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$197cd56b15c33885$var$game","protoProps","Game","initialState","instance","Constructor","TypeError","size","score","status","board","createEmptyBoard","key","value","_this","fill","addRandomTile","start","empty","r","c","push","_empty_Math_floor","isArray","Math","floor","random","_s","_e","_i","Symbol","iterator","_arr","_n","_d","next","done","err","row","col","lastSpawned","filtered","filter","v","coordMapper","mergedPositions","compress","merge","_loop","newRow","operate","changed","reversed","iter","reverse","_this1","map","newCol","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$startBtn","document","querySelector","$197cd56b15c33885$var$scoreEl","$197cd56b15c33885$var$cells","querySelectorAll","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$messageWinner","$197cd56b15c33885$var$render","state","getState","textContent","getScore","forEach","cell","index","_game_mergedPositions","className","concat","some","p","classList","add","setTimeout","remove","addEventListener","e","getStatus","beforeMove","JSON","stringify","moveLeft","moveRight","moveUp","moveDown","isMovePossible"],"version":3,"file":"index.60dc425d.js.map"}